{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport checkFormFields from 'src/app/helper/checkFormFields';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction LoginComponent_small_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 27);\n    i0.ɵɵtext(1, \"*Username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_small_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 27);\n    i0.ɵɵtext(1, \"*Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.type = \"password\";\n    this.isText = false;\n    this.eyeIcon = \"fa-eye-slash\";\n  }\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required] //required input values\n    });\n  }\n  //hide and shows the password and changes the icon accordingly\n  hideShowPass() {\n    this.isText = !this.isText;\n    this.isText ? this.eyeIcon = \"fa-eye\" : this.eyeIcon = \"fa-eye-slash\";\n    this.isText ? this.type = \"text\" : this.type = \"password\";\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      console.log(this.loginForm.value);\n    } else {\n      checkFormFields.checkForm(this.loginForm);\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 38,\n  vars: 8,\n  consts: [[1, \"navbar\", \"navbar-expand\", \"navbar-dark\", \"bg-dark\"], [1, \"navbar-nav\"], [\"routerLink\", \"/\", 1, \"nav-item\", \"nav-link\"], [\"routerLink\", \"/login\", 1, \"nav-item\", \"nav-link\"], [\"routerLink\", \"/signup\", 1, \"nav-item\", \"nav-link\"], [1, \"outer\"], [1, \"container\"], [1, \"row\"], [1, \"offset-md-2\", \"col-lg-5\", \"col-md-7\", \"offset-lg-4\", \"offset-md-3\"], [1, \"panel\", \"border\", \"bg-white\"], [1, \"panel-heading\"], [1, \"pt-3\", \"font-weight-bold\"], [1, \"panel-body\", \"p-3\"], [3, \"formGroup\"], [1, \"form-group\", \"pt-3\"], [1, \"input-field\"], [1, \"fa\", \"fa-user\", \"p-2\"], [\"formControlName\", \"username\", \"type\", \"text\", \"placeholder\", \"Username\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"fa\", \"fa-lock\", \"p-2\"], [\"formControlName\", \"password\", \"placeholder\", \"Password\", 3, \"type\"], [1, \"fa\", \"fa-eye-slash\", 3, \"click\"], [1, \"form-inline\", \"fr\", \"mt-4\"], [\"id\", \"forget\", 1, \"font-weight-bold\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"mt-4\", \"w-100\", 3, \"click\"], [1, \"text-center\", \"pt-4\", \"text-muted\"], [\"id\", \"forget\", \"routerLink\", \"/signup\"], [1, \"text-danger\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"nav\", 0)(1, \"div\", 1)(2, \"a\", 2);\n      i0.ɵɵtext(3, \"Home\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"a\", 3);\n      i0.ɵɵtext(5, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"a\", 4);\n      i0.ɵɵtext(7, \"Signup\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"div\", 6)(10, \"div\", 7)(11, \"div\", 8)(12, \"div\", 9)(13, \"div\", 10)(14, \"h3\", 11);\n      i0.ɵɵtext(15, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 12)(17, \"form\", 13)(18, \"div\", 14)(19, \"div\", 15);\n      i0.ɵɵelement(20, \"span\", 16)(21, \"input\", 17);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(22, LoginComponent_small_22_Template, 2, 0, \"small\", 18);\n      i0.ɵɵelementStart(23, \"div\", 14)(24, \"div\", 15);\n      i0.ɵɵelement(25, \"span\", 19)(26, \"input\", 20);\n      i0.ɵɵelementStart(27, \"span\", 21);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_span_click_27_listener() {\n        return ctx.hideShowPass();\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(28, LoginComponent_small_28_Template, 2, 0, \"small\", 18);\n      i0.ɵɵelementStart(29, \"div\", 22)(30, \"a\", 23);\n      i0.ɵɵtext(31, \"Forgot Password?\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(32, \"button\", 24);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_32_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(33, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"div\", 25);\n      i0.ɵɵtext(35, \"Create a new account \");\n      i0.ɵɵelementStart(36, \"a\", 26);\n      i0.ɵɵtext(37, \"Sign Up\");\n      i0.ɵɵelementEnd()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"error\", ctx.loginForm.controls[\"username\"].dirty && ctx.loginForm.hasError(\"required\", \"username\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"password\"].dirty && ctx.loginForm.hasError(\"required\", \"password\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"error\", ctx.loginForm.controls[\"password\"].dirty && ctx.loginForm.hasError(\"required\", \"password\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"type\", ctx.type);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"password\"].dirty && ctx.loginForm.hasError(\"required\", \"password\"));\n    }\n  },\n  dependencies: [i2.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAA8CA,UAAU,QAAQ,gBAAgB;AAChF,OAAOC,eAAe,MAAM,gCAAgC;;;;;;;ICsBhCC,iCAAqH;IAAAA,qCAAqB;IAAAA,iBAAQ;;;;;IAUlJA,iCAAqH;IAAAA,qCAAqB;IAAAA,iBAAQ;;;ADzB9K,OAAM,MAAOC,cAAc;EASzBC,YAAoBC,EAAe;IAAf,OAAE,GAAFA,EAAE;IAPtB,SAAI,GAAW,UAAU;IAEzB,WAAM,GAAY,KAAK;IAEvB,YAAO,GAAW,cAAc;EAGO;EAEvCC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC7BC,QAAQ,EAAE,CAAC,EAAE,EAAET,UAAU,CAACU,QAAQ,CAAC;MACnCC,QAAQ,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACU,QAAQ,CAAC,CAAC;KACrC,CAAC;EACJ;EAEA;EACAE,YAAY;IAEV,IAAI,CAACC,MAAM,GAAG,CAAC,IAAI,CAACA,MAAM;IAC1B,IAAI,CAACA,MAAM,GAAG,IAAI,CAACC,OAAO,GAAG,QAAQ,GAAG,IAAI,CAACA,OAAO,GAAG,cAAc;IACrE,IAAI,CAACD,MAAM,GAAG,IAAI,CAACE,IAAI,GAAG,MAAM,GAAG,IAAI,CAACA,IAAI,GAAG,UAAU;EAC3D;EAEAC,QAAQ;IACN,IAAG,IAAI,CAACT,SAAS,CAACU,KAAK,EACvB;MACEC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACZ,SAAS,CAACa,KAAK,CAAC;KAClC,MAED;MACEnB,eAAe,CAACoB,SAAS,CAAC,IAAI,CAACd,SAAS,CAAC;;EAG7C;;AApCWJ,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT3BxB,8BAAsD;MAEFA,oBAAI;MAAAA,iBAAI;MACpDA,4BAAiD;MAAAA,qBAAK;MAAAA,iBAAI;MAC1DA,4BAAkD;MAAAA,sBAAM;MAAAA,iBAAI;MAIpEA,8BAAmB;MAMuCA,sBAAK;MAAAA,iBAAK;MAEhDA,gCAA4B;MAIZA,4BAAoC;MAExCA,iBAAM;MAEVA,sEAAkJ;MAGlJA,gCAA6B;MAErBA,4BAAoC;MAEpCA,iCAAuD;MAAjDA;QAAA,OAASyB,kBAAc;MAAA,EAAC;MAAyBzB,iBAAO;MAGtEA,sEAAkJ;MAClJA,gCAAiC;MACWA,iCAAgB;MAAAA,iBAAI;MAEhEA,mCAA0F;MAAlFA;QAAA,OAASyB,cAAU;MAAA,EAAC;MAA8DzB,sBAAK;MAAAA,iBAAS;MACxGA,gCAAyC;MAAAA,sCAAqB;MAAAA,8BAAoC;MAAAA,wBAAO;MAAAA,iBAAI;;;MAtB3GA,gBAAuB;MAAvBA,yCAAuB;MAEIA,eAAiG;MAAjGA,mHAAiG;MAKtHA,eAAuF;MAAvFA,iHAAuF;MAIlEA,eAAiG;MAAjGA,mHAAiG;MAEpFA,eAAa;MAAbA,+BAAa;MAI/CA,eAAuF;MAAvFA,iHAAuF","names":["Validators","checkFormFields","i0","LoginComponent","constructor","fb","ngOnInit","loginForm","group","username","required","password","hideShowPass","isText","eyeIcon","type","onSubmit","valid","console","log","value","checkForm","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/akshatbarwal/Desktop/Angular/registration-page-template/src/app/components/login/login.component.ts","/Users/akshatbarwal/Desktop/Angular/registration-page-template/src/app/components/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport checkFormFields from 'src/app/helper/checkFormFields';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit{\n\n  type: string = \"password\";\n\n  isText: boolean = false;\n\n  eyeIcon: string = \"fa-eye-slash\";\n\n  loginForm!: FormGroup;\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required] //required input values\n    })\n  }\n\n  //hide and shows the password and changes the icon accordingly\n  hideShowPass(){\n    \n    this.isText = !this.isText;\n    this.isText ? this.eyeIcon = \"fa-eye\" : this.eyeIcon = \"fa-eye-slash\";\n    this.isText ? this.type = \"text\" : this.type = \"password\";\n  }\n\n  onSubmit(){\n    if(this.loginForm.valid)\n    {\n      console.log(this.loginForm.value);\n    }\n    else\n    {\n      checkFormFields.checkForm(this.loginForm);\n      \n    }\n  }\n\n}\n","<nav class=\"navbar navbar-expand navbar-dark bg-dark\">\n    <div class=\"navbar-nav\">\n        <a class=\"nav-item nav-link\" routerLink=\"/\">Home</a>\n        <a class=\"nav-item nav-link\" routerLink=\"/login\">Login</a>\n        <a class=\"nav-item nav-link\" routerLink=\"/signup\">Signup</a>\n    </div>\n</nav>\n\n<div class=\"outer\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"offset-md-2 col-lg-5 col-md-7 offset-lg-4 offset-md-3\">\n                <div class=\"panel border bg-white\">\n                    <div class=\"panel-heading\">\n                        <h3 class=\"pt-3 font-weight-bold\">Login</h3>\n                    </div>\n                    <div class=\"panel-body p-3\">\n                        <form [formGroup]=\"loginForm\">\n                            <div class=\"form-group pt-3\">\n                                <div class=\"input-field\" [class.error]=\"loginForm.controls['username'].dirty && loginForm.hasError('required','username')\">\n                                    <span class=\"fa fa-user p-2\"></span>\n                                    <input formControlName=\"username\" type=\"text\" placeholder=\"Username\">\n                                </div>\n                            </div>\n                            <small *ngIf=\"loginForm.controls['password'].dirty && loginForm.hasError('required','password')\" class=\"text-danger\">*Username is required</small>\n\n\n                            <div class=\"form-group pt-3\">\n                                <div class=\"input-field\" [class.error]=\"loginForm.controls['password'].dirty && loginForm.hasError('required','password')\">\n                                    <span class=\"fa fa-lock p-2\"></span>\n                                    <input formControlName=\"password\" [type]=\"type\" placeholder=\"Password\">\n                                    <span (click)=\"hideShowPass()\" class=\"fa fa-eye-slash\"></span>\n                                </div>\n                            </div> \n                            <small *ngIf=\"loginForm.controls['password'].dirty && loginForm.hasError('required','password')\" class=\"text-danger\">*Password is required</small>\n                            <div class=\"form-inline fr mt-4\">\n                                <a id=\"forget\" class=\"font-weight-bold\">Forgot Password?</a>\n                            </div>\n                            <button (click)=\"onSubmit()\" type = \"submit\" class=\"btn btn-primary btn-block mt-4 w-100\">Login</button>\n                            <div class=\"text-center pt-4 text-muted\">Create a new account <a id=\"forget\" routerLink=\"/signup\">Sign Up</a></div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}